test:
  image: node:12
  cache:
    paths:
      - node_modules/
      - .yarn
  before_script:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
    - yarn install --cache-folder .yarn
  stage: test
  script:
    - yarn && yarn test
  only:
    - merge_requests
#deploy_development:
#  before_script:
#    - apt-get update -qq
#    - apt-get install -qq git
#    # Setup SSH deploy keys
#    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#    - eval $(ssh-agent -s)
#    - ssh-add <(echo "$SSH_PRIVATE_KEY")
#    - mkdir -p ~/.ssh
#    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#  environment:
#    name: dev
#  script:
#    - ssh $HOST "cd /data/dev/web/ && git reset --hard && git checkout dev && docker system prune -f && ./build_docker_image.sh && cd ../rocket-bi/ && docker-compose up -d && exit"
#  only:
#    - dev

#deploy_staging:
#  before_script:
#    - apt-get update -qq
#    - apt-get install -qq git
#    # Setup SSH deploy keys
#    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#    - eval $(ssh-agent -s)
#    - ssh-add <(echo "$SSH_PRIVATE_KEY")
#    - mkdir -p ~/.ssh
#    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#  environment:
#    name: staging
#  script:
#    - ssh $HOST "cd /data/web/ && git reset --hard && git checkout staging && docker system prune -f && ./build_docker_image.sh && cd ../rocket-bi/ && docker-compose up -d && exit"
#  only:
#    - staging
